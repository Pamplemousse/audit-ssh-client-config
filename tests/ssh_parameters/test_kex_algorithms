#
# KexAlgorithms
#
# Allowed key exchange algorithms:
# curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
#
source ../lib_test

test_kexalgorithms_different_from_allowed_ones_on_any_host_is_reported() {
  cat << __EOF__ >"${FAKE_BAD_CONFIG}"
Host hostname.com
  KexAlgorithms weak-kex-algorithm
Host *
  KexAlgorithms weak-kex-algorithm
__EOF__

  ${MAIN} ${FAKE_BAD_CONFIG} > ${RESULT}

  expected_warning_message="WARNING: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"
  expected_error_message="ERROR: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"

  assert 'grep "$expected_warning_message" ${RESULT}'
  assert 'grep "$expected_error_message" ${RESULT}'
}

test_missing_kexalgorithm_on_any_host_is_reported() {
  cat << __EOF__ >"${FAKE_BAD_CONFIG}"
Host hostname.com
  KexAlgorithms curve25519-sha256@libssh.org
Host *
  KexAlgorithms curve25519-sha256@libssh.org
__EOF__

  ${MAIN} ${FAKE_BAD_CONFIG} > ${RESULT}

  expected_warning_message="WARNING: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"
  expected_error_message="ERROR: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"

  assert 'grep "$expected_warning_message" ${RESULT}'
  assert 'grep "$expected_error_message" ${RESULT}'
}

test_kexalgorithms_in_wrong_order_on_any_host_is_reported() {
  cat << __EOF__ >"${FAKE_BAD_CONFIG}"
Host hostname.com
  KexAlgorithms diffie-hellman-group-exchange-sha256,curve25519-sha256@libssh.org
Host *
  KexAlgorithms diffie-hellman-group-exchange-sha256,curve25519-sha256@libssh.org
__EOF__

  ${MAIN} ${FAKE_BAD_CONFIG} > ${RESULT}

  expected_warning_message="WARNING: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"
  expected_error_message="ERROR: KexAlgorithms should be set to 'curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'"

  assert 'grep "$expected_warning_message" ${RESULT}'
  assert 'grep "$expected_error_message" ${RESULT}'
}

test_missing_kexalgorithms_statement_on_star_host_returns_an_error() {
  cat << __EOF__ >"${FAKE_BAD_CONFIG}"
Host *
  Username yoloer
__EOF__

  ${MAIN} ${FAKE_BAD_CONFIG} > ${RESULT}

  expected_message="ERROR: KexAlgorithms is missing"

  assert 'grep "$expected_message" ${RESULT}'
}
